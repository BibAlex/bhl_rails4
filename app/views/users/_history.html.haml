- if @total_number > 0
  .col-md-9
    %h4
      = I18n.t('common.volume_history_page_header')
      %span.badge
        = @total_number
    %hr
    - @history.each_with_index do |doc, index|
      - @book = load_volume_without_names_from_solr(doc.volume_id)
     
      .row.nopadding.nomargin
        .col-sm-9
          %h4
            = link_to @book[:title].try(:first).to_s, book_path(id: doc.volume_id, tab: nil)
          .date.text-muted
            %small
              %b
                = I18n.t('common.volume_history_viewed_on')
              = doc.updated_at
  
        .col-sm-3.controls
         
          - if (doc.user_id == session[:user_id])
            %span
              %small
                .btn.btn-default.btn-sm
                  = link_to I18n.t('common.delete'), user_search_history_remove_book_history_path(user_id: doc.user_id,
                    user_volume_history_id: doc.id, page: @page),
                    onclick: "return confirmDelete(\"#{I18n.t('msgs.remove_book_from_history')}\")"
                 
                 
            %span.mg-top20
              
              %small
                .btn.btn-default.btn-sm
                  = link_to I18n.t('common.read'), book_path(id: doc.volume_id, tab: "read"), target: "_blank"
  
            %span.mg-top20
             
              %small
                .btn.btn-default.btn-sm
                  = link_to I18n.t('common.details'), book_path(id: doc.volume_id, tab: nil)
        
      %hr  
  %center
    .pagination-centered
      = will_paginate @history
- else
  %h4
    = I18n.t('msgs.no_volume_history_found')